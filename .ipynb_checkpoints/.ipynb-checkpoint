{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import os\n",
    "import io \n",
    "import datetime\n",
    "import numpy as np\n",
    "import geocoder\n",
    "import statsmodels as sm\n",
    "import statsmodels.formula.api as smf\n",
    "\n",
    "GOOGLE_API_KEY=os.environ['GOOGLE_API_KEY']\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'AL': 'Alabama',\n",
       " 'AK': 'Alaska',\n",
       " None: 'Virgin Islands',\n",
       " 'AZ': 'Arizona',\n",
       " 'AR': 'Arkansas',\n",
       " 'CA': 'California',\n",
       " 'CO': 'Colorado',\n",
       " 'CT': 'Connecticut',\n",
       " 'DE': 'Delaware',\n",
       " 'NJ': 'New Jersey',\n",
       " 'DC': 'District of Columbia',\n",
       " 'FL': 'Florida',\n",
       " 'GA': 'Georgia',\n",
       " 'MI': 'Michigan',\n",
       " 'HI': 'Hawaii',\n",
       " 'ID': 'Idaho',\n",
       " 'IL': 'Illinois',\n",
       " 'IN': 'Indiana',\n",
       " 'IA': 'Iowa',\n",
       " 'KS': 'Kansas',\n",
       " 'KY': 'Kentucky',\n",
       " 'LA': 'Louisiana',\n",
       " 'ME': 'Maine',\n",
       " 'MD': 'Maryland',\n",
       " 'MA': 'Massachusetts',\n",
       " 'MN': 'Minnesota',\n",
       " 'MS': 'Mississippi',\n",
       " 'MO': 'Missouri',\n",
       " 'MT': 'Montana',\n",
       " 'NE': 'Nebraska',\n",
       " 'NV': 'Nevada',\n",
       " 'NH': 'New Hampshire',\n",
       " 'NM': 'New Mexico',\n",
       " 'NY': 'New York',\n",
       " 'NC': 'North Carolina',\n",
       " 'ND': 'North Dakota',\n",
       " 'OH': 'Ohio',\n",
       " 'OK': 'Oklahoma',\n",
       " 'OR': 'Oregon',\n",
       " 'PA': 'Pennsylvania',\n",
       " 'RI': 'Rhode Island',\n",
       " 'SC': 'South Carolina',\n",
       " 'SD': 'South Dakota',\n",
       " 'TN': 'Tennessee',\n",
       " 'TX': 'Texas',\n",
       " 'UT': 'Utah',\n",
       " 'VT': 'Vermont',\n",
       " 'VA': 'Virginia',\n",
       " 'WA': 'Washington',\n",
       " 'WV': 'West Virginia',\n",
       " 'WI': 'Wisconsin',\n",
       " 'WY': 'Wyoming'}"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# read in from repo\n",
    "covid = pd.read_csv('https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv')\n",
    "\n",
    "# reshape into long format\n",
    "# first date is 1/22/2020, index 11\n",
    "first_date_index = 11\n",
    "date_cols = list(covid.columns[first_date_index:])\n",
    "\n",
    "\n",
    "# reduce to min vars\n",
    "covid = covid[['FIPS', 'Admin2', 'Province_State'] + date_cols]\n",
    "\n",
    "covid = covid.set_index(['FIPS', 'Admin2', 'Province_State'])\n",
    "covid = pd.DataFrame(covid.stack())\n",
    "covid.columns = ['cases']\n",
    "covid = covid.reset_index()\n",
    "covid.columns = ['FIPS','county','state','date','cases']\n",
    "covid['date'] = pd.to_datetime(covid['date'])\n",
    "\n",
    "# get state abbreviations from google api - could have hardcoded\n",
    "state_abbr = {}\n",
    "for st in np.unique(covid['state']):\n",
    "    results = geocoder.google(st, key = GOOGLE_API_KEY)\n",
    "    state_abbr[results.state] = st\n",
    "    \n",
    "state_abbr\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "# replace state name with abbr\n",
    "inv_map = {v: k for k, v in state_abbr.items()}\n",
    "covid['st'] = covid['state']\n",
    "covid = covid.replace({'st':inv_map})\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "# pasting in Trump rally dates from wikipedia, slightly cleaned up in google sheet\n",
    "rally_string = '''\n",
    "date\tyear\tcity\tstate\n",
    "June 20\t2020\tTulsa\tOK\n",
    "June 23\t2020\tPhoenix\tAZ\n",
    "August 17\t2020\tMankato\tMN\n",
    "August 17\t2020\tOshkosh\tWI\n",
    "August 18\t2020\tYuma\tAZ\n",
    "August 20\t2020\tOld Forge\tPA\n",
    "August 28\t2020\tLondonderry\tNH\n",
    "September 3\t2020\tLatrobe\tPA\n",
    "September 8\t2020\tWinston-Salem\tNC\n",
    "September 10\t2020\tFreeland\tMI\n",
    "September 12\t2020\tMinden\tNV\n",
    "September 13\t2020\tHenderson\tNV\n",
    "September 17\t2020\tMosinee\tWI\n",
    "September 18\t2020\tBemidji\tMN\n",
    "September 19\t2020\tFayetteville\tNC\n",
    "September 21\t2020\tVandalia\tOH\n",
    "September 21\t2020\tSwanton\tOH\n",
    "September 22\t2020\tPittsburgh\tPA\n",
    "September 24\t2020\tJacksonville\tFL\n",
    "September 25\t2020\tNewport News\tVA\n",
    "September 26\t2020\tMiddletown\tPA\n",
    "September 30\t2020\tDuluth\tMN\n",
    "October 12\t2020\tSanford\tFL\n",
    "October 13\t2020\tJohnstown\tPA\n",
    "October 14\t2020\tDes Moines\tIA\n",
    "October 15\t2020\tGreenville\tNC\n",
    "October 16\t2020\tOcala\tFL\n",
    "October 16\t2020\tMacon\tGA\n",
    "October 17\t2020\tMuskegon\tMI\n",
    "October 17\t2020\tJanesville\tWI\n",
    "October 18\t2020\tCarson City\tNV\n",
    "October 19\t2020\tPrescott\tAZ\n",
    "October 19\t2020\tTucson\tAZ\n",
    "October 20\t2020\tErie\tPA\n",
    "October 21\t2020\tGastonia\tNC\n",
    "October 23\t2020\tThe Villages\tFL\n",
    "October 23\t2020\tPensacola\tFL\n",
    "October 24\t2020\tLumberton\tNC\n",
    "October 24\t2020\tCircleville\tOH\n",
    "October 24\t2020\tWaukesha\tWI\n",
    "October 25\t2020\tManchester\tNH\n",
    "October 26\t2020\tAllentown\tPA\n",
    "October 26\t2020\tLititz\tPA\n",
    "October 26\t2020\tMartinsburg\tPA\n",
    "October 27\t2020\tLansing\tMI\n",
    "October 27\t2020\tWest Salem\tWI\n",
    "October 27\t2020\tOmaha\tNE\n",
    "October 28\t2020\tBullhead City\tAZ\n",
    "October 28\t2020\tGoodyear\tAZ\n",
    "October 29\t2020\tTampa\tFL\n",
    "October 30\t2020\tWaterford Township\tMI\n",
    "October 30\t2020\tGreen Bay\tWI\n",
    "October 30\t2020\tRochester\tMN\n",
    "October 31\t2020\tBucks County\tPA\n",
    "October 31\t2020\tReading\tPA\n",
    "October 31\t2020\tButler\tPA\n",
    "November 1\t2020\tSterling Heights\tMI\n",
    "November 1\t2020\tDubuque\tIA\n",
    "November 1\t2020\tRome\tGA\n",
    "November 1\t2020\tOpa-locka\tFL\n",
    "November 2\t2020\tFayetteville\tNC\n",
    "November 2\t2020\tMelbourne\tFL\n",
    "November 2\t2020\tScranton\tPA\n",
    "November 2\t2020\tGrand Rapids\tMI\n",
    "'''\n",
    "rallies = pd.read_table(io.StringIO(rally_string))\n",
    "rallies['rally_date'] = rallies['date'] + ', ' + rallies['year'].astype(str)\n",
    "rallies['rally_date'] = pd.to_datetime(rallies['rally_date'])\n",
    "rallies['city_state'] = rallies.city + ', ' + rallies.state\n",
    "\n",
    "# geocode cities for county\n",
    "cities = np.unique(rallies.city + ', ' + rallies.state)\n",
    "city_county = []\n",
    "for city in cities:\n",
    "    results = geocoder.google(city, key = GOOGLE_API_KEY)\n",
    "    city_county.append((city, results.county))\n",
    "\n",
    "# hardcoding some independent cities\n",
    "with_counties = pd.DataFrame(city_county, columns=['city_state','county'])\n",
    "with_counties.loc[with_counties['city_state'] == 'Carson City, NV','county'] = 'Carson City'\n",
    "with_counties.loc[with_counties['city_state'] == 'Newport News, VA','county'] = 'Newport News'\n",
    "with_counties['county'] = with_counties.county.str.replace(' County', '')\n",
    "rallies = pd.merge(rallies, with_counties, left_on='city_state', right_on='city_state')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>FIPS</th>\n",
       "      <th>county</th>\n",
       "      <th>st</th>\n",
       "      <th>date_x</th>\n",
       "      <th>cases</th>\n",
       "      <th>city_state</th>\n",
       "      <th>rally_date</th>\n",
       "      <th>rally</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>30456</th>\n",
       "      <td>4013.0</td>\n",
       "      <td>Maricopa</td>\n",
       "      <td>AZ</td>\n",
       "      <td>2020-01-22</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaT</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30457</th>\n",
       "      <td>4013.0</td>\n",
       "      <td>Maricopa</td>\n",
       "      <td>AZ</td>\n",
       "      <td>2020-01-23</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaT</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30458</th>\n",
       "      <td>4013.0</td>\n",
       "      <td>Maricopa</td>\n",
       "      <td>AZ</td>\n",
       "      <td>2020-01-24</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaT</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30459</th>\n",
       "      <td>4013.0</td>\n",
       "      <td>Maricopa</td>\n",
       "      <td>AZ</td>\n",
       "      <td>2020-01-25</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaT</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30460</th>\n",
       "      <td>4013.0</td>\n",
       "      <td>Maricopa</td>\n",
       "      <td>AZ</td>\n",
       "      <td>2020-01-26</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaT</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30733</th>\n",
       "      <td>4013.0</td>\n",
       "      <td>Maricopa</td>\n",
       "      <td>AZ</td>\n",
       "      <td>2020-10-25</td>\n",
       "      <td>154182</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaT</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30734</th>\n",
       "      <td>4013.0</td>\n",
       "      <td>Maricopa</td>\n",
       "      <td>AZ</td>\n",
       "      <td>2020-10-26</td>\n",
       "      <td>154722</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaT</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30735</th>\n",
       "      <td>4013.0</td>\n",
       "      <td>Maricopa</td>\n",
       "      <td>AZ</td>\n",
       "      <td>2020-10-27</td>\n",
       "      <td>155458</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaT</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30736</th>\n",
       "      <td>4013.0</td>\n",
       "      <td>Maricopa</td>\n",
       "      <td>AZ</td>\n",
       "      <td>2020-10-28</td>\n",
       "      <td>155951</td>\n",
       "      <td>Goodyear, AZ</td>\n",
       "      <td>2020-10-28</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30737</th>\n",
       "      <td>4013.0</td>\n",
       "      <td>Maricopa</td>\n",
       "      <td>AZ</td>\n",
       "      <td>2020-10-29</td>\n",
       "      <td>156736</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaT</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>282 rows × 8 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         FIPS    county  st     date_x   cases    city_state rally_date  rally\n",
       "30456  4013.0  Maricopa  AZ 2020-01-22       0           NaN        NaT      0\n",
       "30457  4013.0  Maricopa  AZ 2020-01-23       0           NaN        NaT      0\n",
       "30458  4013.0  Maricopa  AZ 2020-01-24       0           NaN        NaT      0\n",
       "30459  4013.0  Maricopa  AZ 2020-01-25       0           NaN        NaT      0\n",
       "30460  4013.0  Maricopa  AZ 2020-01-26       1           NaN        NaT      0\n",
       "...       ...       ...  ..        ...     ...           ...        ...    ...\n",
       "30733  4013.0  Maricopa  AZ 2020-10-25  154182           NaN        NaT      0\n",
       "30734  4013.0  Maricopa  AZ 2020-10-26  154722           NaN        NaT      0\n",
       "30735  4013.0  Maricopa  AZ 2020-10-27  155458           NaN        NaT      0\n",
       "30736  4013.0  Maricopa  AZ 2020-10-28  155951  Goodyear, AZ 2020-10-28      1\n",
       "30737  4013.0  Maricopa  AZ 2020-10-29  156736           NaN        NaT      0\n",
       "\n",
       "[282 rows x 8 columns]"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# merge rallies and covid data\n",
    "covid_rallies = pd.merge(covid, rallies, how='left', left_on=['county','st','date'], right_on=['county','state','rally_date'] )\n",
    "\n",
    "covid_rallies = covid_rallies[['FIPS','county','st','date_x','cases','city_state','rally_date']]\n",
    "covid_rallies['rally'] = (~covid_rallies.city_state.isnull()).astype(int)\n",
    "covid_rallies[covid_rallies['county'] == 'Maricopa']\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>FIPS</th>\n",
       "      <th>county</th>\n",
       "      <th>st</th>\n",
       "      <th>date_x</th>\n",
       "      <th>cases</th>\n",
       "      <th>city_state</th>\n",
       "      <th>rally_date</th>\n",
       "      <th>rally</th>\n",
       "      <th>rally_shift3</th>\n",
       "      <th>rally_shift4</th>\n",
       "      <th>...</th>\n",
       "      <th>rally_shift2</th>\n",
       "      <th>upcoming_rally</th>\n",
       "      <th>cases_shift1</th>\n",
       "      <th>new_cases</th>\n",
       "      <th>new_cases_lag</th>\n",
       "      <th>new_cases_lag2</th>\n",
       "      <th>yesterday_cases</th>\n",
       "      <th>t</th>\n",
       "      <th>t2</th>\n",
       "      <th>t3</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>30456</th>\n",
       "      <td>4013.0</td>\n",
       "      <td>Maricopa</td>\n",
       "      <td>AZ</td>\n",
       "      <td>2020-01-22</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaT</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30457</th>\n",
       "      <td>4013.0</td>\n",
       "      <td>Maricopa</td>\n",
       "      <td>AZ</td>\n",
       "      <td>2020-01-23</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaT</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30458</th>\n",
       "      <td>4013.0</td>\n",
       "      <td>Maricopa</td>\n",
       "      <td>AZ</td>\n",
       "      <td>2020-01-24</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaT</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3</td>\n",
       "      <td>9</td>\n",
       "      <td>27</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30459</th>\n",
       "      <td>4013.0</td>\n",
       "      <td>Maricopa</td>\n",
       "      <td>AZ</td>\n",
       "      <td>2020-01-25</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaT</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>4</td>\n",
       "      <td>16</td>\n",
       "      <td>64</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30460</th>\n",
       "      <td>4013.0</td>\n",
       "      <td>Maricopa</td>\n",
       "      <td>AZ</td>\n",
       "      <td>2020-01-26</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaT</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>5</td>\n",
       "      <td>25</td>\n",
       "      <td>125</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30733</th>\n",
       "      <td>4013.0</td>\n",
       "      <td>Maricopa</td>\n",
       "      <td>AZ</td>\n",
       "      <td>2020-10-25</td>\n",
       "      <td>154182</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaT</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>153177.0</td>\n",
       "      <td>1005.0</td>\n",
       "      <td>482.0</td>\n",
       "      <td>594.0</td>\n",
       "      <td>153177.0</td>\n",
       "      <td>278</td>\n",
       "      <td>77284</td>\n",
       "      <td>21484952</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30734</th>\n",
       "      <td>4013.0</td>\n",
       "      <td>Maricopa</td>\n",
       "      <td>AZ</td>\n",
       "      <td>2020-10-26</td>\n",
       "      <td>154722</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaT</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>154182.0</td>\n",
       "      <td>540.0</td>\n",
       "      <td>1005.0</td>\n",
       "      <td>482.0</td>\n",
       "      <td>154182.0</td>\n",
       "      <td>279</td>\n",
       "      <td>77841</td>\n",
       "      <td>21717639</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30735</th>\n",
       "      <td>4013.0</td>\n",
       "      <td>Maricopa</td>\n",
       "      <td>AZ</td>\n",
       "      <td>2020-10-27</td>\n",
       "      <td>155458</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaT</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>154722.0</td>\n",
       "      <td>736.0</td>\n",
       "      <td>540.0</td>\n",
       "      <td>1005.0</td>\n",
       "      <td>154722.0</td>\n",
       "      <td>280</td>\n",
       "      <td>78400</td>\n",
       "      <td>21952000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30736</th>\n",
       "      <td>4013.0</td>\n",
       "      <td>Maricopa</td>\n",
       "      <td>AZ</td>\n",
       "      <td>2020-10-28</td>\n",
       "      <td>155951</td>\n",
       "      <td>Goodyear, AZ</td>\n",
       "      <td>2020-10-28</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>155458.0</td>\n",
       "      <td>493.0</td>\n",
       "      <td>736.0</td>\n",
       "      <td>540.0</td>\n",
       "      <td>155458.0</td>\n",
       "      <td>281</td>\n",
       "      <td>78961</td>\n",
       "      <td>22188041</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30737</th>\n",
       "      <td>4013.0</td>\n",
       "      <td>Maricopa</td>\n",
       "      <td>AZ</td>\n",
       "      <td>2020-10-29</td>\n",
       "      <td>156736</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaT</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>155951.0</td>\n",
       "      <td>785.0</td>\n",
       "      <td>493.0</td>\n",
       "      <td>736.0</td>\n",
       "      <td>155951.0</td>\n",
       "      <td>282</td>\n",
       "      <td>79524</td>\n",
       "      <td>22425768</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>282 rows × 25 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         FIPS    county  st     date_x   cases    city_state rally_date  \\\n",
       "30456  4013.0  Maricopa  AZ 2020-01-22       0           NaN        NaT   \n",
       "30457  4013.0  Maricopa  AZ 2020-01-23       0           NaN        NaT   \n",
       "30458  4013.0  Maricopa  AZ 2020-01-24       0           NaN        NaT   \n",
       "30459  4013.0  Maricopa  AZ 2020-01-25       0           NaN        NaT   \n",
       "30460  4013.0  Maricopa  AZ 2020-01-26       1           NaN        NaT   \n",
       "...       ...       ...  ..        ...     ...           ...        ...   \n",
       "30733  4013.0  Maricopa  AZ 2020-10-25  154182           NaN        NaT   \n",
       "30734  4013.0  Maricopa  AZ 2020-10-26  154722           NaN        NaT   \n",
       "30735  4013.0  Maricopa  AZ 2020-10-27  155458           NaN        NaT   \n",
       "30736  4013.0  Maricopa  AZ 2020-10-28  155951  Goodyear, AZ 2020-10-28   \n",
       "30737  4013.0  Maricopa  AZ 2020-10-29  156736           NaN        NaT   \n",
       "\n",
       "       rally  rally_shift3  rally_shift4  ...  rally_shift2  upcoming_rally  \\\n",
       "30456      0           0.0           0.0  ...           0.0               0   \n",
       "30457      0           0.0           0.0  ...           0.0               0   \n",
       "30458      0           0.0           0.0  ...           0.0               0   \n",
       "30459      0           0.0           0.0  ...           0.0               0   \n",
       "30460      0           0.0           0.0  ...           0.0               0   \n",
       "...      ...           ...           ...  ...           ...             ...   \n",
       "30733      0           1.0           0.0  ...           0.0               1   \n",
       "30734      0           0.0           NaN  ...           1.0               0   \n",
       "30735      0           NaN           NaN  ...           0.0               1   \n",
       "30736      1           NaN           NaN  ...           NaN               0   \n",
       "30737      0           NaN           NaN  ...           NaN               0   \n",
       "\n",
       "       cases_shift1  new_cases  new_cases_lag  new_cases_lag2  \\\n",
       "30456           NaN        NaN            NaN             NaN   \n",
       "30457           0.0        0.0            NaN             NaN   \n",
       "30458           0.0        0.0            0.0             NaN   \n",
       "30459           0.0        0.0            0.0             0.0   \n",
       "30460           0.0        1.0            0.0             0.0   \n",
       "...             ...        ...            ...             ...   \n",
       "30733      153177.0     1005.0          482.0           594.0   \n",
       "30734      154182.0      540.0         1005.0           482.0   \n",
       "30735      154722.0      736.0          540.0          1005.0   \n",
       "30736      155458.0      493.0          736.0           540.0   \n",
       "30737      155951.0      785.0          493.0           736.0   \n",
       "\n",
       "       yesterday_cases    t     t2        t3  \n",
       "30456              NaN    1      1         1  \n",
       "30457              0.0    2      4         8  \n",
       "30458              0.0    3      9        27  \n",
       "30459              0.0    4     16        64  \n",
       "30460              0.0    5     25       125  \n",
       "...                ...  ...    ...       ...  \n",
       "30733         153177.0  278  77284  21484952  \n",
       "30734         154182.0  279  77841  21717639  \n",
       "30735         154722.0  280  78400  21952000  \n",
       "30736         155458.0  281  78961  22188041  \n",
       "30737         155951.0  282  79524  22425768  \n",
       "\n",
       "[282 rows x 25 columns]"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# create var for rally 3-7 days prior\n",
    "covid_rallies['rally_shift3']= covid_rallies[['county','st','rally']].groupby(['county','st']).shift(3)\n",
    "covid_rallies['rally_shift4']= covid_rallies[['county','st','rally']].groupby(['county','st']).shift(4)\n",
    "covid_rallies['rally_shift5']= covid_rallies[['county','st','rally']].groupby(['county','st']).shift(5)\n",
    "covid_rallies['rally_shift6']= covid_rallies[['county','st','rally']].groupby(['county','st']).shift(6)\n",
    "covid_rallies['rally_shift7']= covid_rallies[['county','st','rally']].groupby(['county','st']).shift(7)\n",
    "\n",
    "covid_rallies['recent_rally'] = ((covid_rallies['rally_shift3'] == 1) | (covid_rallies['rally_shift4'] == 1) | \\\n",
    "    (covid_rallies['rally_shift5'] == 1) | (covid_rallies['rally_shift6'] == 1) | (covid_rallies['rally_shift7'] == 1)).astype(int) \n",
    "\n",
    "# create var for rally upcoming\n",
    "covid_rallies['rally_shift1']= covid_rallies[['county','st','rally']].groupby(['county','st']).shift(-1)\n",
    "covid_rallies['rally_shift2']= covid_rallies[['county','st','rally']].groupby(['county','st']).shift(-2)\n",
    "covid_rallies['rally_shift3']= covid_rallies[['county','st','rally']].groupby(['county','st']).shift(-3)\n",
    "covid_rallies['rally_shift4']= covid_rallies[['county','st','rally']].groupby(['county','st']).shift(-4)\n",
    "covid_rallies['rally_shift5']= covid_rallies[['county','st','rally']].groupby(['county','st']).shift(-5)\n",
    "covid_rallies['rally_shift6']= covid_rallies[['county','st','rally']].groupby(['county','st']).shift(-6)\n",
    "covid_rallies['rally_shift7']= covid_rallies[['county','st','rally']].groupby(['county','st']).shift(-7)\n",
    "\n",
    "covid_rallies['upcoming_rally'] = ((covid_rallies['rally_shift1'] == 1) | (covid_rallies['rally_shift1'] == 1) |(covid_rallies['rally_shift3'] == 1) | (covid_rallies['rally_shift4'] == 1) | \\\n",
    "    (covid_rallies['rally_shift5'] == 1) | (covid_rallies['rally_shift6'] == 1) | (covid_rallies['rally_shift7'] == 1)).astype(int) \n",
    "\n",
    "# create new cases variable and lags\n",
    "covid_rallies['cases_shift1']=covid_rallies[['county','st','cases']].groupby(['county','st']).shift(1)\n",
    "covid_rallies['new_cases'] = covid_rallies.cases - covid_rallies.cases_shift1\n",
    "covid_rallies['new_cases_lag'] = covid_rallies[['county','st','new_cases']].groupby(['county','st']).shift(1)\n",
    "covid_rallies['new_cases_lag2'] = covid_rallies[['county','st','new_cases']].groupby(['county','st']).shift(2)\n",
    "\n",
    "# yesterdays cases\n",
    "covid_rallies['yesterday_cases'] = covid_rallies[['county','st','cases']].groupby(['county','st']).shift(1)\n",
    "\n",
    "# time in days\n",
    "covid_rallies['t'] = ((covid_rallies['date_x']-pd.to_datetime('2020-01-21')) / np.timedelta64(1, 'D')).astype(int)\n",
    "covid_rallies['t2'] = covid_rallies.t**2\n",
    "covid_rallies['t3'] = covid_rallies.t**3\n",
    "covid_rallies[covid_rallies['county'] == 'Maricopa']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                            OLS Regression Results                            \n",
      "==============================================================================\n",
      "Dep. Variable:              new_cases   R-squared:                       0.524\n",
      "Model:                            OLS   Adj. R-squared:                  0.524\n",
      "Method:                 Least Squares   F-statistic:                 1.740e+04\n",
      "Date:                Sat, 31 Oct 2020   Prob (F-statistic):               0.00\n",
      "Time:                        01:27:54   Log-Likelihood:            -4.8486e+06\n",
      "No. Observations:              933520   AIC:                         9.697e+06\n",
      "Df Residuals:                  933460   BIC:                         9.698e+06\n",
      "Df Model:                          59                                         \n",
      "Covariance Type:            nonrobust                                         \n",
      "=====================================================================================\n",
      "                        coef    std err          t      P>|t|      [0.025      0.975]\n",
      "-------------------------------------------------------------------------------------\n",
      "Intercept            -2.6351      0.504     -5.226      0.000      -3.623      -1.647\n",
      "st[T.AL]              1.5260      0.563      2.709      0.007       0.422       2.630\n",
      "st[T.AR]              0.6637      0.554      1.198      0.231      -0.423       1.750\n",
      "st[T.AZ]              7.1208      0.788      9.036      0.000       5.576       8.665\n",
      "st[T.CA]              9.2785      0.578     16.046      0.000       8.145      10.412\n",
      "st[T.CO]              0.5724      0.567      1.009      0.313      -0.539       1.684\n",
      "st[T.CT]              1.1928      0.948      1.258      0.208      -0.665       3.051\n",
      "st[T.DC]              0.9079      1.575      0.576      0.564      -2.180       3.996\n",
      "st[T.DE]              1.6932      1.256      1.348      0.178      -0.768       4.154\n",
      "st[T.FL]              6.9233      0.564     12.266      0.000       5.817       8.030\n",
      "st[T.GA]              0.8680      0.511      1.699      0.089      -0.134       1.870\n",
      "st[T.HI]              1.4364      1.090      1.317      0.188      -0.701       3.573\n",
      "st[T.IA]              0.4777      0.535      0.893      0.372      -0.571       1.526\n",
      "st[T.ID]              0.7619      0.605      1.258      0.208      -0.425       1.948\n",
      "st[T.IL]              2.0647      0.533      3.872      0.000       1.020       3.110\n",
      "st[T.IN]              0.9416      0.540      1.745      0.081      -0.116       1.999\n",
      "st[T.KS]              0.0995      0.531      0.187      0.851      -0.942       1.141\n",
      "st[T.KY]              0.2606      0.524      0.497      0.619      -0.767       1.288\n",
      "st[T.LA]              0.7696      0.567      1.356      0.175      -0.342       1.882\n",
      "st[T.MA]              1.0427      0.787      1.324      0.185      -0.500       2.586\n",
      "st[T.MD]              1.9118      0.693      2.758      0.006       0.553       3.270\n",
      "st[T.ME]             -0.3778      0.772     -0.489      0.625      -1.891       1.135\n",
      "st[T.MI]              0.8165      0.545      1.498      0.134      -0.252       1.885\n",
      "st[T.MN]              0.7918      0.543      1.457      0.145      -0.273       1.857\n",
      "st[T.MO]              0.8376      0.526      1.593      0.111      -0.193       1.868\n",
      "st[T.MS]              0.4503      0.548      0.822      0.411      -0.623       1.523\n",
      "st[T.MT]              0.1194      0.580      0.206      0.837      -1.017       1.255\n",
      "st[T.NC]              1.4083      0.534      2.635      0.008       0.361       2.456\n",
      "st[T.ND]              0.3238      0.585      0.553      0.580      -0.823       1.471\n",
      "st[T.NE]              0.0550      0.539      0.102      0.919      -1.001       1.111\n",
      "st[T.NH]             -0.2480      0.886     -0.280      0.780      -1.984       1.488\n",
      "st[T.NJ]              0.0695      0.719      0.097      0.923      -1.339       1.478\n",
      "st[T.NM]              0.5031      0.643      0.783      0.434      -0.756       1.763\n",
      "st[T.NV]              3.1974      0.759      4.211      0.000       1.709       4.686\n",
      "st[T.NY]             -1.1039      0.571     -1.932      0.053      -2.224       0.016\n",
      "st[T.OH]              1.2370      0.543      2.280      0.023       0.173       2.300\n",
      "st[T.OK]              0.8671      0.552      1.570      0.116      -0.215       1.949\n",
      "st[T.OR]              0.3764      0.631      0.597      0.551      -0.860       1.612\n",
      "st[T.PA]              0.9061      0.563      1.608      0.108      -0.198       2.011\n",
      "st[T.Puerto Rico]     0.2289      0.551      0.415      0.678      -0.851       1.309\n",
      "st[T.RI]              1.5307      1.090      1.404      0.160      -0.606       3.668\n",
      "st[T.SC]              2.1013      0.600      3.500      0.000       0.925       3.278\n",
      "st[T.SD]              0.1372      0.565      0.243      0.808      -0.969       1.244\n",
      "st[T.TN]              1.6333      0.538      3.038      0.002       0.580       2.687\n",
      "st[T.TX]              2.1550      0.496      4.349      0.000       1.184       3.126\n",
      "st[T.UT]              2.1988      0.634      3.466      0.001       0.955       3.442\n",
      "st[T.VA]              0.2638      0.519      0.508      0.611      -0.753       1.281\n",
      "st[T.VT]             -0.5121      0.802     -0.639      0.523      -2.084       1.060\n",
      "st[T.WA]              0.9940      0.620      1.603      0.109      -0.221       2.209\n",
      "st[T.WI]              2.5016      0.557      4.487      0.000       1.409       3.594\n",
      "st[T.WV]             -0.1475      0.581     -0.254      0.800      -1.287       0.992\n",
      "st[T.WY]              0.0228      0.700      0.033      0.974      -1.350       1.395\n",
      "t                     0.0731      0.006     12.583      0.000       0.062       0.085\n",
      "t2                   -0.0004   4.71e-05     -7.639      0.000      -0.000      -0.000\n",
      "t3                 4.274e-07   1.09e-07      3.929      0.000    2.14e-07    6.41e-07\n",
      "new_cases_lag         0.5544      0.001    635.954      0.000       0.553       0.556\n",
      "yesterday_cases       0.0029   1.05e-05    274.416      0.000       0.003       0.003\n",
      "recent_rally         24.8595      3.150      7.891      0.000      18.685      31.034\n",
      "rally                15.2817      6.230      2.453      0.014       3.070      27.493\n",
      "upcoming_rally       12.7996      2.548      5.023      0.000       7.806      17.794\n",
      "==============================================================================\n",
      "Omnibus:                  1924315.137   Durbin-Watson:                   2.404\n",
      "Prob(Omnibus):                  0.000   Jarque-Bera (JB):   21368869943310.070\n",
      "Skew:                          15.021   Prob(JB):                         0.00\n",
      "Kurtosis:                   23441.738   Cond. No.                     1.18e+09\n",
      "==============================================================================\n",
      "\n",
      "Notes:\n",
      "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
      "[2] The condition number is large, 1.18e+09. This might indicate that there are\n",
      "strong multicollinearity or other numerical problems.\n"
     ]
    }
   ],
   "source": [
    "covid_clean = covid_rallies[~covid_rallies['new_cases'].isna()]\n",
    "\n",
    "\n",
    "results = smf.ols('new_cases ~ t + t2 + t3 + new_cases_lag + yesterday_cases + recent_rally + rally + upcoming_rally + st ', data=covid_clean).fit()\n",
    "print(results.summary())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "covid_rallies.to_csv('/data/home/futch/covid_rallies/data/covid_rallies.csv', index = False)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
